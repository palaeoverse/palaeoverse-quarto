---
pagetitle: Directory
title: Palaeoverse Directory
title-block-banner: true
toc: true
---

::: justify
Welcome to the Palaeoverse Directory! This resource is provided to promote the communication of upcoming conferences, workshops, and vacancies. It also provides a register of research labs and their research focus. We hope that this resource will foster networking and collaboration across the globe.

If you wish to register an upcoming conference, workshop, vacancy or your lab, please complete the <a href="./form/directory.qmd" style="text-decoration: none" target="_blank">**submission form**</a>.

Posts shared here do not imply endorsement from the Palaeoverse team and we can hold no responsibility for any interactions you make via this service. If you face any issues or have any concerns about current postings, please contact a member of the Palaeoverse team.
:::

## Map view

```{r}
#| echo: false
#| warning: false
# Load libraries
library(leaflet)
library(leaflet.extras)
library(dplyr)
library(tidygeocoder)
library(googlesheets4)
# Get sheet
df <- read_sheet("https://docs.google.com/spreadsheets/d/1escqpJM_Ljt5h5claM0xV5e9IEWBv6rNMIsuQsnUXYY/edit?usp=sharing")
# Filter old data
df <- df %>% filter(as.Date(Expiry) > Sys.Date())
# Get addresses
address <- data.frame(name = df$Title,
                      addr = paste(df$Street, df$City, df$Province, df$Country, sep = ", "))
coordinates <- address %>%
  geocode(addr, method = "osm")
df <- bind_cols(df, coordinates)

icons <- awesomeIconList(
  Lab = makeAwesomeIcon(icon = "group",
                        iconColor = "#FFFFFF",
                        library = "fa",
                        markerColor = "cadetblue"),
  Conference = makeAwesomeIcon(icon = "comments", 
                               iconColor = "#FFFFFF",
                               library = "fa",
                               markerColor = "darkred"),
  Workshop = makeAwesomeIcon(icon = "gear",
                             iconColor = "#FFFFFF",
                             library = "fa",
                             markerColor = "orange"),
  Vacancy = makeAwesomeIcon(icon = "briefcase",
                            iconColor = "#FFFFFF",
                            library = "fa",
                            markerColor = "darkpurple")
)

df$Label <- paste0(df$Post, ": ", df$Title, ", ", df$Institution)

split.df <- split(df, df$Post)

l <- leaflet() %>% 
  setView(lng = 0,
          lat = 0,
          zoom = 1) %>% 
  addProviderTiles(providers$CartoDB.Positron,
                   options = providerTileOptions(minZoom = 1, maxZoom = 20))

names(split.df) %>%
  purrr::walk( function(df) {
    l <<- l %>%
      addAwesomeMarkers(data=split.df[[df]],
                 lng=~long, lat=~lat,
                 icon = ~icons[[df]],
                 label=~as.character(Label),
                 popup=~paste("<b>",
                              Title,
                              "</b>",
                              "<br>",
                              Description,
                              "<br>",
                              "<a href='mailto:",
                              Email,
                              "'>Contact</a>",
                              "|",
                              "<a href='",
                              Link,
                              "'>More info</a>"),
                 group = df,
                 clusterOptions = markerClusterOptions(removeOutsideVisibleBounds = F),
                 labelOptions = labelOptions(noHide = F,
                                             direction = 'auto'))
  })

l %>%
  addLayersControl(
    overlayGroups = names(split.df),
    options = layersControlOptions(collapsed = FALSE)) %>%
  addResetMapButton() %>%
  addSearchFeatures(
    targetGroups = names(split.df),
    options = searchFeaturesOptions(
      zoom = 12, openPopup = TRUE, firstTipSubmit = TRUE,
      autoCollapse = TRUE, hideMarkerOnCollapse = TRUE)) %>%
  addFullscreenControl()
```

<br>

## Table view

```{r}
#| echo: false
#| warning: false
# Load libraries
library(googlesheets4)
library(dplyr)
library(DT)
library(reactable)
# Get sheet
df <- read_sheet("https://docs.google.com/spreadsheets/d/1escqpJM_Ljt5h5claM0xV5e9IEWBv6rNMIsuQsnUXYY/edit?usp=sharing")

# Filter old data and sort by date
df <- df %>%
  filter(as.Date(Expiry) > Sys.Date()) %>%
  arrange(desc(as.Date(Date)))

# Generate links
df$Contact <- paste0("<a href='mailto:",df$Email,"' target='_blank'>",df$Name,"</a>")
df$Title <- paste0("<a href='",df$Link,"' target='_blank'>",df$Title,"</a>")

df <- data.frame(Type = df$Post,
                 Title = df$Title,
                 Contact = df$Contact,
                 Institution = df$Institution,
                 Country = df$Country,
                 Description = df$Description)

df %>%
  DT::datatable(style = "bootstrap4", escape = FALSE, rownames = FALSE,
options = list(
  columnDefs = list(list(className = 'dt-nowrap', targets = 1:5))
)) %>%
  DT::formatStyle(columns = c(1:6), fontSize = '65%')
```
